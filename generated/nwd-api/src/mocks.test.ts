// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.11.5                         -- www.JsonSchema42.org
//
import assert from "node:assert/strict";
import test from "node:test";
import * as validators from "./validators.js";
import * as mocks from "./mocks.js";
test("ParametersSchema", () => {
const mock = mocks.mockParametersSchema();
const valid = validators.isParametersSchema(mock);
assert.equal(valid, true);
});
test("GetSchema", () => {
const mock = mocks.mockGetSchema();
const valid = validators.isGetSchema(mock);
assert.equal(valid, true);
});
test("MessageContainer", () => {
const mock = mocks.mockMessageContainer();
const valid = validators.isMessageContainer(mock);
assert.equal(valid, true);
});
test("Message", () => {
const mock = mocks.mockMessage();
const valid = validators.isMessage(mock);
assert.equal(valid, true);
});
test("PostSchema", () => {
const mock = mocks.mockPostSchema();
const valid = validators.isPostSchema(mock);
assert.equal(valid, true);
});
test("RequestBodySchema", () => {
const mock = mocks.mockRequestBodySchema();
const valid = validators.isRequestBodySchema(mock);
assert.equal(valid, true);
});
