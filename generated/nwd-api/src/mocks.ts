// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.11.8                         -- www.JsonSchema42.org
//
import * as types from "./types.js";
const depthCounters: Record<string, number> = {};
export const unknownValue = {};
export const anyValue = {};
export const neverValue = {};
export interface MockGeneratorOptions {
maximumDepth?: number;
numberPrecision?: number;
stringCharacters?: string;
defaultMinimumValue?: number;
defaultMaximumValue?: number;
defaultMinimumItems?: number;
defaultMaximumItems?: number;
defaultMinimumProperties?: number;
defaultMaximumProperties?: number;
defaultMinimumStringLength?: number;
defaultMaximumStringLength?: number;
}
const defaultMockGeneratorOptions = {
maximumDepth: 1,
numberPrecision: 1000,
stringCharacters: "abcdefghijklmnopqrstuvwxyz",
defaultMinimumValue: -1000,
defaultMaximumValue: 1000,
defaultMinimumItems: 1,
defaultMaximumItems: 5,
defaultMinimumProperties: 1,
defaultMaximumProperties: 5,
defaultMinimumStringLength: 5,
defaultMaximumStringLength: 20,
}
/**
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/paths/%2Fecho/get/parameters/0/schema}
*/
export function mockParametersSchema(options: MockGeneratorOptions = {}): types.ParametersSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["0"] ??= 0;
try {
depthCounters["0"]++;
return (
new Array(
configuration.defaultMinimumStringLength + nextSeed() % (configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters["0"]--;
}
}
/**
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/paths/%2Fecho/get/responses/200/content/application%2Fjson/schema}
*/
export function mockGetSchema(options: MockGeneratorOptions = {}): types.GetSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["1"] ??= 0;
try {
depthCounters["1"]++;
return (mockMessageContainer());
}
finally {
depthCounters["1"]--;
}
}
/**
* @description Object that contains a message
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/components/schemas/message-container}
*/
export function mockMessageContainer(options: MockGeneratorOptions = {}): types.MessageContainer {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["2"] ??= 0;
try {
depthCounters["2"]++;
return (
{
"message": mockMessage(),
}
);
}
finally {
depthCounters["2"]--;
}
}
/**
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/components/schemas/message-container/properties/message}
*/
export function mockMessage(options: MockGeneratorOptions = {}): types.Message {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["3"] ??= 0;
try {
depthCounters["3"]++;
return (
new Array(
1 + nextSeed() % (configuration.defaultMaximumStringLength - 1 + 1)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters["3"]--;
}
}
/**
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/paths/%2Fecho/post/responses/200/content/application%2Fjson/schema}
*/
export function mockPostSchema(options: MockGeneratorOptions = {}): types.PostSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["4"] ??= 0;
try {
depthCounters["4"]++;
return (mockMessageContainer());
}
finally {
depthCounters["4"]--;
}
}
/**
* @see {@link file:///home/elmerbulthuis/workspace/nationaal-watersportdiploma/specifications/nwd-api.yaml#/paths/%2Fecho/post/requestBody/content/application%2Fjson/schema}
*/
export function mockRequestBodySchema(options: MockGeneratorOptions = {}): types.RequestBodySchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters["5"] ??= 0;
try {
depthCounters["5"]++;
return (mockMessageContainer());
}
finally {
depthCounters["5"]--;
}
}
let seed = 1;
function nextSeed() {
// https://en.wikipedia.org/wiki/Linear_congruential_generator
// https://statmath.wu.ac.at/software/src/prng-3.0.2/doc/prng.html/Table_LCG.html
const p = Math.pow(2, 31) - 1;
const a = 950706376;
const b = 0;
seed = (a * seed + b) % p;
return seed;
}
