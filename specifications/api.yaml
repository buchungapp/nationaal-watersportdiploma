openapi: 3.0.2

info:
  title: Nationaal Watersportdiploma API
  description: |-
    Nationaal Watersportdiploma API
  version: 0.1.0

security:
  - api-token: []

paths:
  /me:
    get:
      operationId: me
      summary: Retrieves information about the current user (if any)
      security:
        - token: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'

  /programs:
    get:
      operationId: get-programs
      summary: Retrieve a list of programs
      description: >-
        Retrieve a list of programs. The list will be paginated and the provided
        query parameters allow filtering the returned programs.
      tags:
        - Programs
      security:
        - token: []
      responses:
        '200':
          description: A list of programs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramListModel'

  /location:
    get:
      operationId: get-locations
      summary: Get all locations
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationListModel'

    post:
      operationId: create-location
      summary: Creates a new location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationModel'

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
        '403':
          $ref: '#/components/responses/forbidden'

  /location/{location}/certificate:
    parameters:
      - in: path
        required: true
        name: location
        schema:
          type: string
          format: uuid

    get:
      operationId: get-location-certificates
      summary: Get all certificates for location
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCertificateListModel'

    post:
      operationId: create-location-certificate
      summary: Creates a new certificate for a location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationCertificateModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
        '403':
          $ref: '#/components/responses/forbidden'

  /location/{location}/cohort:
    parameters:
      - in: path
        required: true
        name: location
        schema:
          type: string
          format: uuid

    get:
      operationId: get-location-cohorts
      summary: Get all cohorts for location
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCohortListModel'

    post:
      operationId: create-location-cohort
      summary: Creates a new cohort for a location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationCohortModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
        '403':
          $ref: '#/components/responses/forbidden'

components:
  schemas:
    # Entities

    UserModel:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

    ProgramListModel:
      type: object
      required:
        - id
        - handle
        - title
        - degreeId
        - degreeTitle
        - disciplineId
        - disciplineTitle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'
        degreeId:
          $ref: '#/components/schemas/Id'
        degreeTitle:
          $ref: '#/components/schemas/Title'
        disciplineId:
          $ref: '#/components/schemas/Id'
        disciplineTitle:
          $ref: '#/components/schemas/Title'

    LocationListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationModel:
      type: object
      required:
        - handle
        - title
      properties:
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    LocationCohortListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationCohortModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    LocationCertificateListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationCertificateModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    # Fields

    Id:
      type: string
      format: uuid
      description: A unique identifier

    Title:
      type: string
      minLength: 1
      nullable: true # needs support from generator
      description: A title (may be null)

    Handle:
      type: string
      pattern: ^[a-z0-9\-]+$
      minLength: 3
      description: The unique handle of an item

  responses:
    forbidden:
      description: Forbidden

  securitySchemes:
    token:
      type: http
      description: Default authentication mechanism
      scheme: bearer

    api-token:
      type: apiKey
      name: api-token
      in: header
