openapi: 3.0.2

info:
  title: Nationaal Watersportdiploma API
  description: |-
    Nationaal Watersportdiploma API
  version: 0.1.0

paths:
  /me:
    get:
      operationId: me
      summary: Retrieves information about the current user (if any)
      security:
        - open-id: []
        - api-key: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'

  /discipline:
    get:
      operationId: listDisciplines
      tags:
        - discipline
      summary: Lists all disciplines
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineListModel'

  /discipline/{discipline-key}:
    parameters:
      - in: path
        name: discipline-key
        required: true
        schema:
          $ref: '#/components/schemas/HandleOrId'
    get:
      operationId: retrieveDiscipline
      tags:
        - discipline
      summary: Retrieves a single discipline
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisciplineModel'
        '404':
          description: Not Found

  /discipline/{discipline-key}/curriculum:
    parameters:
      - in: path
        name: discipline-key
        required: true
        schema:
          $ref: '#/components/schemas/HandleOrId'
    get:
      operationId: retrieveCurriculaByDiscipline
      tags:
        - curriculum
      summary: Retrieves a curricula by discipline
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurriculumListModel'
        '404':
          description: Not Found

  /programs:
    get:
      operationId: listPrograms
      summary: Retrieve a list of programs
      description: >-
        Retrieve a list of programs. The list will be paginated and the provided
        query parameters allow filtering the returned programs.
      tags:
        - program
      security:
        - open-id: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramListModel'

  /location:
    get:
      operationId: get-locations
      summary: Get all locations
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationListModel'

    post:
      operationId: create-location
      summary: Creates a new location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationModel'

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
        '403':
          description: Forbidden

  /find-certificate:
    get:
      parameters:
        - in: query
          name: certificate-handle
          required: true
          schema:
            $ref: '#/components/schemas/Handle'
        - in: query
          name: issuedAt
          required: true
          schema:
            type: string
            format: date

      operationId: find-certificate
      summary: Find certificate by handle and issue date

      security:
        - api-key: []

      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModel'
        '404':
          description: Not found

        '403':
          description: Forbidden

  /location/{location-key}/certificate:
    parameters:
      - in: path
        required: true
        name: location-key
        schema:
          $ref: '#/components/schemas/HandleOrId'

    get:
      operationId: get-location-certificates
      summary: Get all certificates for location
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCertificateListModel'
        '404':
          description: Not Found

    post:
      operationId: create-location-certificate
      summary: Creates a new certificate for a location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationCertificateModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /location/{location-key}/cohort:
    parameters:
      - in: path
        required: true
        name: location-key
        schema:
          $ref: '#/components/schemas/HandleOrId'

    get:
      operationId: get-location-cohorts
      summary: Get all cohorts for location
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCohortListModel'
        '404':
          description: Not Found

    post:
      operationId: create-location-cohort
      summary: Creates a new cohort for a location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationCohortModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
        '403':
          description: Forbidden

  /country:
    get:
      operationId: listDCountries
      tags:
        - country
      summary: Lists all countries
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryListModel'

components:
  schemas:
    # Entities

    UserModel:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

    DisciplineModel:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

    DisciplineListModel:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

    CurriculumListModel:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'

    ProgramListModel:
      type: object
      required:
        - id
        - handle
        - title
        - degreeId
        - degreeTitle
        - disciplineId
        - disciplineTitle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'
        degreeId:
          $ref: '#/components/schemas/Id'
        degreeTitle:
          $ref: '#/components/schemas/Title'
        disciplineId:
          $ref: '#/components/schemas/Id'
        disciplineTitle:
          $ref: '#/components/schemas/Title'

    LocationListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationModel:
      type: object
      required:
        - handle
        - title
      properties:
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    LocationCohortListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationCohortModel:
      type: object
      required:
        - handle
        - title
      properties:
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CertificateModel:
      type: object
      required:
        - id
        - handle
        - studentCurriculumId
        - createdAt
        - updatedAt
        - deletedAt
        - issuedAt
        - visibleFrom
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        studentCurriculumId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        deletedAt:
          nullable: true
          type: string
          format: date
        issuedAt:
          nullable: true
          type: string
          format: date
        visibleFrom:
          nullable: true
          type: string
          format: date

    LocationCertificateListModel:
      type: object
      required:
        - id
        - handle
        - title
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CreateLocationCertificateModel:
      type: object
      required:
        - handle
        - title
      properties:
        handle:
          $ref: '#/components/schemas/Handle'
        title:
          $ref: '#/components/schemas/Title'

    CountryListModel:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

    # Fields

    Id:
      type: string
      format: uuid
      description: A unique identifier

    Title:
      type: string
      minLength: 1
      nullable: true
      description: A title (may be null)

    Handle:
      type: string
      pattern: ^[a-z0-9\-]+$
      minLength: 3
      description: The unique handle of an item
      not:
        $ref: '#/components/schemas/Id'

    HandleOrId:
      oneOf:
        - $ref: '#/components/schemas/Id'
        - $ref: '#/components/schemas/Handle'

  securitySchemes:
    # this should be transformed into oauth authentication once the generator supports it
    open-id:
      type: http
      description: Default authentication mechanism
      scheme: bearer

    api-key:
      type: apiKey
      name: x-api-key
      in: header
